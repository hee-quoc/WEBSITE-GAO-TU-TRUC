"use client";

import Image from "next/image";
import React, { Fragment, useEffect, useState } from "react";
import { motion, easeOut } from "framer-motion";

// ‚úÖ Data d√πng cho desktop
const scrollData = [
  {
    icon: "/platform/icon.svg",
    title: ["Ch·ªß ƒë·ªông gieo tr·ªìng,", "v·ªØng v√†ng ngu·ªìn gi·ªëng"],
    content:
      "V·ªõi l·ª£i th·∫ø c√≥ h∆°n 150ha qu·ªπ ƒë·∫•t gia ƒë√¨nh, T∆∞ Tr√∫c <br /> ch·ªß ƒë·ªông ki·ªÉm so√°t ch·∫∑t ch·∫Ω t·ª´ l√∫a gi·ªëng ƒë·∫øn <br /> v√πng tr·ªìng, ƒë·∫£m b·∫£o ch·∫•t l∆∞·ª£ng t·ª´ g·ªëc. Nh·ªù v·∫≠y,<br /> doanh nghi·ªáp lu√¥n v·ªØng v√†ng tr∆∞·ªõc m·ªçi bi·∫øn ƒë·ªông <br />v·ªÅ th·ªùi ti·∫øt, d·ªãch b·ªánh hay th·ªã tr∆∞·ªùng, s·∫µn s√†ng duy tr√¨<br /> ngu·ªìn cung ·ªïn ƒë·ªãnh, cao c·∫•p, ƒë√°p ·ª©ng k·ªãp th·ªùi m·ªçi<br /> nhu c·∫ßu v·ªÅ s·∫£n l∆∞·ª£ng c·ªßa ƒë·ªëi t√°c.",
    image: "/platform/1.svg",
    isHeader: false,
  },
  {
    icon: "/platform/icon.svg",
    title: ["Quy tr√¨nh nghi√™m ng·∫∑t,", "ch·∫•t l∆∞·ª£ng v∆∞·ª£t b·∫≠c"],
    content:
      "M·ªçi c√¥ng ƒëo·∫°n s·∫£n xu·∫•t ƒë∆∞·ª£c T∆∞ Tr√∫c ki·ªÉm so√°t<br /> nghi√™m ng·∫∑t v√† minh b·∫°ch, ƒë·∫£m b·∫£o m·ªói h·∫°t g·∫°o<br /> ƒë·ªÅu ƒë·∫°t ch·∫•t l∆∞·ª£ng ·ªïn ƒë·ªãnh v√† ƒë·ªìng nh·∫•t.",
    image: "/platform/2.svg",
    isHeader: false,
  },
  {
    icon: "/platform/icon.svg",
    title: ["S·∫£n ph·∫©m an to√†n,", "ch·ª©ng nh·∫≠n an t√¢m"],
    content:
      "T∆∞ Tr√∫c ƒë√£ v√† ƒëang nghi√™n c·ª©u ph√°t tri·ªÉn nhi·ªÅu d√≤ng<br /> s·∫£n ph·∫©m ƒë√°p ·ª©ng ƒëa d·∫°ng nhu c·∫ßu th∆∞·ªüng th·ª©c,<br /> ƒë·ªìng th·ªùi tu√¢n th·ªß nghi√™m ng·∫∑t c√°c ti√™u chu·∫©n<br /> qu·ªëc t·∫ø v·ªÅ an to√†n s·∫£n xu·∫•t v√† th·ª±c ph·∫©m.",
    image: "/platform/3.svg",
    isHeader: false,
  },
  {
    icon: "/platform/icon.svg",
    title: ["Uy t√≠n h√†ng ƒë·∫ßu,", "ƒë·ªìng h√†nh d√†i l√¢u"],
    content:
      "V·ªõi b·ªÅ d√†y kinh nghi·ªám trong ng√†nh l√∫a g·∫°o,<br /> T∆∞ Tr√∫c ƒë√£ tr·ªü th√†nh ƒë·ªëi t√°c tin c·∫≠y l√¢u nƒÉm<br /> c·ªßa nhi·ªÅu doanh nghi·ªáp trong v√† ngo√†i n∆∞·ªõc,<br /> kh·∫≥ng ƒë·ªãnh v·ªØng ch·∫Øc v·ªã th·∫ø uy t√≠n h√†ng ƒë·∫ßu<br /> tr√™n th·ªã tr∆∞·ªùng.",
    image: "/platform/4.svg",
    isHeader: false,
  },
];

// ‚úÖ Data d√†nh ri√™ng cho mobile
const scrollDataMobile = [
  {
    icon: "/platform/icon.svg",
    title: ["Ch·ªß ƒë·ªông gieo tr·ªìng,", "v·ªØng v√†ng ngu·ªìn gi·ªëng"],
    content: [
      "V·ªõi l·ª£i th·∫ø c√≥ h∆°n 150ha qu·ªπ ƒë·∫•t gia ƒë√¨nh, T∆∞ Tr√∫c ch·ªß ƒë·ªông ki·ªÉm so√°t ch·∫∑t ch·∫Ω t·ª´ l√∫a gi·ªëng ƒë·∫øn v√πng tr·ªìng, ƒë·∫£m b·∫£o ch·∫•t l∆∞·ª£ng t·ª´ g·ªëc. Nh·ªù v·∫≠y, doanh nghi·ªáp lu√¥n v·ªØng v√†ng tr∆∞·ªõc m·ªçi bi·∫øn ƒë·ªông v·ªÅ th·ªùi ti·∫øt, d·ªãch b·ªánh hay th·ªã tr∆∞·ªùng, s·∫µn s√†ng duy tr√¨ ngu·ªìn cung ·ªïn ƒë·ªãnh, cao c·∫•p, ƒë√°p ·ª©ng k·ªãp th·ªùi m·ªçi nhu c·∫ßu v·ªÅ s·∫£n l∆∞·ª£ng  c·ªßa ƒë·ªëi t√°c.",
    ],
    image: "/platform/1.svg",
  },
  {
    icon: "/platform/icon.svg",
    title: ["Quy tr√¨nh nghi√™m ng·∫∑t,", "ch·∫•t l∆∞·ª£ng v∆∞·ª£t b·∫≠c"],
    content: [
      "M·ªçi c√¥ng ƒëo·∫°n s·∫£n xu·∫•t ƒë∆∞·ª£c T∆∞ Tr√∫c ki·ªÉm so√°t nghi√™m ng·∫∑t v√† minh b·∫°ch, ƒë·∫£m b·∫£o m·ªói h·∫°t g·∫°o ƒë·ªÅu ƒë·∫°t ch·∫•t l∆∞·ª£ng ·ªïn ƒë·ªãnh v√† ƒë·ªìng nh·∫•t.",
    ],
    image: "/platform/2.svg",
  },
  {
    icon: "/platform/icon.svg",
    title: ["S·∫£n ph·∫©m an to√†n,", "ch·ª©ng nh·∫≠n an t√¢m"],
    content: [
      "T∆∞ Tr√∫c ƒë√£ v√† ƒëang nghi√™n c·ª©u ph√°t tri·ªÉn nhi·ªÅu d√≤ng s·∫£n ph·∫©m ƒë√°p ·ª©ng ƒëa d·∫°ng nhu c·∫ßu th∆∞·ªüng th·ª©c, ƒë·ªìng th·ªùi tu√¢n th·ªß nghi√™m ng·∫∑t c√°c ti√™u chu·∫©n qu·ªëc t·∫ø v·ªÅ an to√†n s·∫£n xu·∫•t v√† th·ª±c ph·∫©m.",
    ],
    image: "/platform/3.svg",
  },
  {
    icon: "/platform/icon.svg",
    title: ["Uy t√≠n h√†ng ƒë·∫ßu,", "ƒë·ªìng h√†nh d√†i l√¢u"],
    content: [
      "V·ªõi b·ªÅ d√†y kinh nghi·ªám trong ng√†nh l√∫a g·∫°o, T∆∞ Tr√∫c ƒë√£ tr·ªü th√†nh ƒë·ªëi t√°c tin c·∫≠y l√¢u nƒÉm c·ªßa nhi·ªÅu doanh nghi·ªáp trong v√† ngo√†i n∆∞·ªõc, kh·∫≥ng ƒë·ªãnh v·ªØng ch·∫Øc v·ªã th·∫ø uy t√≠n h√†ng ƒë·∫ßu tr√™n th·ªã tr∆∞·ªùng."
    ],
    image: "/platform/4.svg",
  },
];

const textVariants = {
  hidden: { opacity: 0, y: 30 },
  visible: {
    opacity: 1,
    y: 0,
    transition: { duration: 0.5, ease: easeOut },
  },
};

function useMediaQuery(query: string): boolean {
  const [matches, setMatches] = useState(false);
  useEffect(() => {
    const media = window.matchMedia(query);
    const listener = () => setMatches(media.matches);
    listener(); // Initial check
    media.addListener(listener);
    return () => media.removeListener(listener);
  }, [query]);
  return matches;
}

export function PlatformSection() {
  const isMobile = useMediaQuery("(max-width: 767px)");

  if (isMobile) {
    return (
      <section className="w-full px-5 py-10 bg-white">
        {/* HEADER TEXT */}
        <div className="space-y-4">
          <h2 className="text-[42px] font-bold leading-[1] text-[#005B94] font-fz">
            N·ªÅn t·∫£ng ch·ªß ƒë·ªông <br /> nƒÉng l·ª±c v·ªØng v√†ng
          </h2>
          <p className="text-[28px] text-[#667085] leading-[1] font-alegreya">
            Th·∫ø m·∫°nh s·∫£n ph·∫©m & s·∫£n xu·∫•t c·ªßa th∆∞∆°ng hi·ªáu trong su·ªët 3 th·∫≠p k·ª∑
          </p>
        </div>

        {/* ICON + QUOTE */}
        <div className="pt-8 space-y-3">
          <Image
            src="/platform/icon-ngoac-kep.svg"
            alt="Quote Icon"
            width={40}
            height={30}
          />
          <p className="text-[#0A5B89] text-[18px] font-alegreya-sans font-[500] leading-[1.2]">
            Su·ªët h∆°n 3 th·∫≠p k·ª∑, T∆∞ Tr√∫c b·ªÅn b·ªâ x√¢y d·ª±ng n·ªÅn t·∫£ng s·∫£n xu·∫•t ch·ªß ƒë·ªông, ki·ªÉm so√°t to√†n di·ªán t·ª´ ch·∫•t l∆∞·ª£ng ƒë·∫øn s·∫£n l∆∞·ª£ng, lu√¥n s·∫µn s√†ng ƒë·ªìng h√†nh l√¢u d√†i c√πng c√°c ƒë·ªëi t√°c chi·∫øn l∆∞·ª£c
          </p>
        </div>

        {/* LINE DIVIDER */}
        <hr className="my-8 border-[#D0D5DD]" />

        {/* SLIDE SCROLL SECTION */}
        <div className="flex overflow-x-auto space-x-5 snap-x snap-mandatory pb-4">
          {scrollDataMobile.map((item, idx) => (
            <div
              key={idx}
              className="min-w-[280px] max-w-[300px] shrink-0 snap-center rounded-xl p-4 "
            >
              <div className="w-full aspect-square relative mb-4 rounded-md overflow-hidden">
                <Image
                  src={item.image}
                  alt={`Image ${idx}`}
                  fill
                  className="object-cover"
                />
              </div>
              <h3 className="text-[#628423] text-[28px] font-regular mb-2 font-fz leading-[1]">
                {item.title.map((line, i) => (
                  <Fragment key={i}>
                    {line}
                    <br />
                  </Fragment>
                ))}
              </h3>
              <div className="space-y-2">
                {item.content.map((line, i) => (
                  <p
                    key={i}
                    className="text-[#667085] text-[14px] font-fz-poppins leading-[1.5]"
                  >
                    {line}
                  </p>
                ))}
              </div>
            </div>
          ))}
        </div>
      </section>
    );
  }

  // üíª Desktop layout gi·ªØ nguy√™n
  const fullScrollData = [
    {
      isHeader: true,
      image: "/platform/Mask group.svg",
      icon: "",
      title: [],
      content: "",
    },
    ...scrollData,
  ];

  return (
    <section className="relative w-full bg-white z-10">
      <div className="relative w-full max-w-[1280px] mx-auto grid grid-cols-1 lg:grid-cols-2 lg:gap-2">
        <div className="w-full px-5 lg:pl-10">
          {fullScrollData.map((item, idx) => (
            <div key={idx} className="min-h-[80vh] flex items-center">
              {item.isHeader ? (
                <div className="w-full h-[550px] flex flex-col justify-between z-10">
                  <div className="space-y-4">
                    <h2 className="text-[56px] md:text-[44px] font-extrabold leading-tight text-[#005B94] font-fz">
                      N·ªÅn t·∫£ng ch·ªß ƒë·ªông <br /> nƒÉng l·ª±c v·ªØng v√†ng
                    </h2>
                    <p className="text-[32px] text-[#888888] leading-relaxed font-alegreya">
                      Th·∫ø m·∫°nh s·∫£n ph·∫©m & s·∫£n xu·∫•t c·ªßa <br />
                      th∆∞∆°ng hi·ªáu trong su·ªët 3 th·∫≠p k·ª∑
                    </p>
                  </div>
                  <div className="space-y-3 pt-6">
                    <Image
                      src="/platform/icon-ngoac-kep.svg"
                      alt="Quote Icon"
                      width={56}
                      height={39}
                    />
                    <p className="text-[#005B94] text-[20px] leading-relaxed font-medium font-fz">
                      Su·ªët h∆°n 3 th·∫≠p k·ª∑, T∆∞ Tr√∫c b·ªÅn b·ªâ x√¢y d·ª±ng n·ªÅn t·∫£ng s·∫£n xu·∫•t <br className="hidden sm:inline"/> ch·ªß ƒë·ªông,
                      ki·ªÉm so√°t to√†n di·ªán t·ª´ ch·∫•t l∆∞·ª£ng ƒë·∫øn s·∫£n l∆∞·ª£ng,<br className="hidden sm:inline"/> lu√¥n s·∫µn s√†ng ƒë·ªìng h√†nh l√¢u d√†i
                      c√πng c√°c ƒë·ªëi t√°c chi·∫øn l∆∞·ª£c
                    </p>
                  </div>
                </div>
              ) : (
                <motion.div
                  className="w-full"
                  variants={textVariants}
                  initial="hidden"
                  whileInView="visible"
                  viewport={{ once: true, amount: 0.3 }}
                >
                  <Image src={item.icon} alt="" width={40} height={40} />
                  <h3 className="text-[#628423] text-[32px] font-fz font-regular leading-[1] mt-3">
                    {item.title.map((line, i) => (
                      <Fragment key={i}>
                        {line}
                        <br />
                      </Fragment>
                    ))}
                  </h3>
                  <p
                    className="text-[#667085] text-[16px] leading-[1.4] font-fz-poppins font-[400] mt-3"
                    dangerouslySetInnerHTML={{ __html: item.content }}
                  />
                </motion.div>
              )}
            </div>
          ))}
        </div>

        <div className="hidden lg:block w-full">
          {fullScrollData.map((item, idx) => (
            <div
              key={idx}
              className="sticky h-[80vh] flex items-center "
              style={{ top: 0 }}
            >
              <div className="relative w-full max-w-[550px] h-[550px] rounded-xl shadow-md">
                <Image
                  src={item.image}
                  alt={item.isHeader ? "·∫¢nh n·ªÅn ban ƒë·∫ßu" : `Illustration for ${item.title[0]}`}
                  fill
                  sizes="(max-width: 1024px) 90vw, 550px"
                  className="object-cover rounded-xl"
                  priority={idx === 0}
                />
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
}
